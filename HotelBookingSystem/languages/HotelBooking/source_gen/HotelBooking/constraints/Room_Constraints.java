package HotelBooking.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_CanBeParent;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import HotelBooking.behavior.Room__BehaviorDescriptor;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.SNodePointer;

public class Room_Constraints extends BaseConstraintsDescriptor {
  public Room_Constraints() {
    super(MetaAdapterFactory.getConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, "HotelBooking.structure.Room"));
  }

  @Override
  protected ConstraintFunction<ConstraintContext_CanBeParent, Boolean> calculateCanBeParentConstraint() {
    return new ConstraintFunction<ConstraintContext_CanBeParent, Boolean>() {
      @NotNull
      public Boolean invoke(@NotNull ConstraintContext_CanBeParent context, @Nullable CheckingNodeContext checkingNodeContext) {
        boolean result = staticCanBeAParent(context.getNode(), context.getChildNode(), context.getChildConcept(), context.getLink());

        if (!(result) && checkingNodeContext != null) {
          checkingNodeContext.setBreakingNode(canBeParentBreakingPoint);
        }

        return result;
      }
    };
  }
  private static boolean staticCanBeAParent(SNode node, SNode childNode, SAbstractConcept childConcept, SContainmentLink link) {
    return (boolean) Room__BehaviorDescriptor.constraints_id5HgWCcgkX31.invoke(SNodeOperations.cast(node, MetaAdapterFactory.getConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, "HotelBooking.structure.Room")), node);
  }
  private static SNodePointer canBeParentBreakingPoint = new SNodePointer("r:c86ea960-bac5-4a16-bde1-2085176b3d2b(HotelBooking.constraints)", "269847891528108936");
}
