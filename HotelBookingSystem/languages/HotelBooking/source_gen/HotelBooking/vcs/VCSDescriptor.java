package HotelBooking.vcs;

/*Generated by MPS */

import jetbrains.mps.vcs.mergehints.runtime.VCSAspectDescriptor;
import jetbrains.mps.vcs.mergehints.runtime.VCSConceptAspect;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.vcs.util.MergeStrategy;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class VCSDescriptor extends VCSAspectDescriptor.BaseVcsAspectDescriptor {
  public VCSDescriptor() {
  }

  @Override
  public VCSConceptAspect getVCSDescriptor(SAbstractConcept c) {
    SAbstractConcept cncpt = c;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        // Concept:  
        return new VCSConceptAspect.BaseVCSConceptAspect() {
          @Nullable
          public MergeStrategy getDefaultStrategy() {
            return null;
          }
          @Nullable
          public MergeStrategy getDefaultStrategy(SProperty p) {
            return null;
          }
          @Nullable
          public MergeStrategy getDefaultStrategy(SContainmentLink l) {
            return null;
          }
          @Nullable
          public MergeStrategy getDefaultStrategy(SReferenceLink l) {
            return null;
          }
        };
      default:
        return null;
    }
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL)).seal();
}
