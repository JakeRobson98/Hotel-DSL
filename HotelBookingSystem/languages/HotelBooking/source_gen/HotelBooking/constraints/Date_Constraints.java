package HotelBooking.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.Map;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class Date_Constraints extends BaseConstraintsDescriptor {
  public Date_Constraints() {
    super(MetaAdapterFactory.getConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x47b154f6f964358bL, "HotelBooking.structure.Date"));
  }

  @Override
  protected Map<SProperty, PropertyConstraintsDescriptor> getSpecifiedProperties() {
    Map<SProperty, PropertyConstraintsDescriptor> properties = new HashMap<SProperty, PropertyConstraintsDescriptor>();
    properties.put(MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x47b154f6f964358bL, 0x47b154f6f964358cL, "Day"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x47b154f6f964358bL, 0x47b154f6f964358cL), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "Day";
        if ((SPropertyOperations.getInteger(propertyValue)) < 31 && ((SPropertyOperations.getInteger(propertyValue)) >= 1)) {
          return true;
        }
        return false;
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x47b154f6f964358bL, 0x47b154f6f964358eL, "Month"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x47b154f6f964358bL, 0x47b154f6f964358eL), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "Month";
        if ((SPropertyOperations.getInteger(propertyValue)) < 13 && ((SPropertyOperations.getInteger(propertyValue)) >= 1)) {
          return true;
        }
        return false;
      }
    });
    properties.put(MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x47b154f6f964358bL, 0x47b154f6f9643591L, "Year"), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x47b154f6f964358bL, 0x47b154f6f9643591L), this) {
      @Override
      public boolean hasOwnValidator() {
        return true;
      }
      @Override
      public boolean validateValue(SNode node, String propertyValue) {
        String propertyName = "Year";
        if (((SPropertyOperations.getInteger(propertyValue)) >= 2019)) {
          return true;
        }
        return false;
      }
    });
    return properties;
  }
}
