package HotelBooking.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.BehaviorRegistry;
import jetbrains.mps.smodel.language.ConceptRegistry;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.SModifiersImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.jetbrains.mps.openapi.model.SNode;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;

public final class Room__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, "HotelBooking.structure.Room");
  private static final BehaviorRegistry REGISTRY = ConceptRegistry.getInstance().getBehaviorRegistry();

  public static final SMethod<Boolean> equals_id2Ohsz9mIOU$ = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("equals").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("2Ohsz9mIOU$").registry(REGISTRY).build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));
  public static final SMethod<Void> setPrice_id7YHpMnwC_Wh = new SMethodBuilder<Void>(new SJavaCompoundTypeImpl(Void.class)).name("setPrice").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("7YHpMnwC_Wh").registry(REGISTRY).build(SMethodBuilder.createJavaParameter(Integer.TYPE, ""));
  public static final SMethod<String> getPrice_id7YHpMnwBdw8 = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getPrice").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("7YHpMnwBdw8").registry(REGISTRY).build();
  public static final SMethod<String> getfacillityList_id795K_XqHNGP = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getfacillityList").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("795K_XqHNGP").registry(REGISTRY).build();
  public static final SMethod<String> getName_id7hAAzwIWVvi = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getName").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("7hAAzwIWVvi").registry(REGISTRY).build();
  public static final SMethod<String> getBedCount_id5KUuItmRlWM = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getBedCount").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5KUuItmRlWM").registry(REGISTRY).build();
  public static final SMethod<String> getToiletCount_id5KUuItmRm2F = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getToiletCount").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5KUuItmRm2F").registry(REGISTRY).build();
  public static final SMethod<String> getRoomType_id5KUuItmRm6g = new SMethodBuilder<String>(new SJavaCompoundTypeImpl(String.class)).name("getRoomType").modifiers(SModifiersImpl.create(8, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5KUuItmRm6g").registry(REGISTRY).build();
  public static final SMethod<Boolean> constraints_id5HgWCcgkX31 = new SMethodBuilder<Boolean>(new SJavaCompoundTypeImpl(Boolean.TYPE)).name("constraints").modifiers(SModifiersImpl.create(0, AccessPrivileges.PUBLIC)).concept(CONCEPT).id("5HgWCcgkX31").registry(REGISTRY).build(SMethodBuilder.createJavaParameter((Class<SNode>) ((Class) Object.class), ""));

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(equals_id2Ohsz9mIOU$, setPrice_id7YHpMnwC_Wh, getPrice_id7YHpMnwBdw8, getfacillityList_id795K_XqHNGP, getName_id7hAAzwIWVvi, getBedCount_id5KUuItmRlWM, getToiletCount_id5KUuItmRm2F, getRoomType_id5KUuItmRm6g, constraints_id5HgWCcgkX31);

  private static void ___init___(@NotNull SNode __thisNode__) {
  }

  /*package*/ static boolean equals_id2Ohsz9mIOU$(@NotNull SNode __thisNode__, SNode Room) {
    if (SPropertyOperations.getInteger(Room, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x2d11723256bb3a78L, "roomNumber")) == SPropertyOperations.getInteger(__thisNode__, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x2d11723256bb3a78L, "roomNumber"))) {
      return true;
    }
    return false;
  }
  /*package*/ static void setPrice_id7YHpMnwC_Wh(@NotNull SNode __thisNode__, int newPrice) {
    SPropertyOperations.assign(__thisNode__, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e09ca852L, 0x7fad6725e09ca866L, "price"), newPrice);
  }
  /*package*/ static String getPrice_id7YHpMnwBdw8(@NotNull SNode __thisNode__) {
    int price = SPropertyOperations.getInteger(__thisNode__, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e09ca852L, 0x7fad6725e09ca866L, "price"));
    for (SNode fac : SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x7fad6725e0988025L, "Facilities"))) {
      price += SPropertyOperations.getInteger(fac, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e09ca852L, 0x7fad6725e09ca866L, "price"));
    }
    for (SNode bed : SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x7fad6725e0988016L, "Beds"))) {
      price += SPropertyOperations.getInteger(bed, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e09ca852L, 0x7fad6725e09ca866L, "price"));
    }
    String number = price + "";
    return number;
  }
  /*package*/ static String getfacillityList_id795K_XqHNGP(@NotNull SNode __thisNode__) {
    String str = "";
    for (SNode fac : SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x7fad6725e0988025L, "Facilities"))) {
      str += SPropertyOperations.getString(fac, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e0988022L, 0x26ee893bae652778L, "type"));
      if (SPropertyOperations.getBoolean(fac, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e09ca852L, 0x26ee893bae652025L, "luxury"))) {
        str += "*";
      }
      str += ", ";
    }
    return str;
  }
  /*package*/ static String getName_id7hAAzwIWVvi(@NotNull SNode __thisNode__) {
    String number = "Room: " + SPropertyOperations.getInteger(__thisNode__, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x2d11723256bb3a78L, "roomNumber")) + "";
    return number;
  }
  /*package*/ static String getBedCount_id5KUuItmRlWM(@NotNull SNode __thisNode__) {
    String number = SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x7fad6725e0988016L, "Beds")).size() + "";
    return number;
  }
  /*package*/ static String getToiletCount_id5KUuItmRm2F(@NotNull SNode __thisNode__) {
    int count = 0;
    for (SNode facility : ListSequence.fromList(SLinkOperations.getChildren(__thisNode__, MetaAdapterFactory.getContainmentLink(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x7fad6725e0988025L, "Facilities")))) {
      if (SPropertyOperations.getString(facility, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e0988022L, 0x26ee893bae652778L, "type")).equals("Bathroom")) {
        count++;
      }
    }
    String number = count + "";
    return number;
  }
  /*package*/ static String getRoomType_id5KUuItmRm6g(@NotNull SNode __thisNode__) {
    String number = "";
    return number;
  }
  /*package*/ static boolean constraints_id5HgWCcgkX31(@NotNull SNode __thisNode__, SNode n) {
    int BedCount = 0;
    int faccilityCount = 0;
    int capacity = 0;
    int luxuryCount = 0;
    for (SNode Child : SNodeOperations.getChildren(n)) {
      if (SNodeOperations.isInstanceOf(Child, MetaAdapterFactory.getConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a7aL, "HotelBooking.structure.Bed"))) {
        BedCount++;
        capacity += SPropertyOperations.getInteger(SNodeOperations.cast(Child, MetaAdapterFactory.getConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a7aL, "HotelBooking.structure.Bed")), MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a7aL, 0x26ee893bae65202fL, "type"));
      }
      if (SNodeOperations.isInstanceOf(Child, MetaAdapterFactory.getConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e0988022L, "HotelBooking.structure.Facility"))) {
        faccilityCount++;
        if (SPropertyOperations.getString(SNodeOperations.cast(Child, MetaAdapterFactory.getConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e0988022L, "HotelBooking.structure.Facility")), MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e0988022L, 0x26ee893bae652778L, "type")).equals("futon")) {
          capacity++;
        }
      }
      if (SNodeOperations.isInstanceOf(Child, MetaAdapterFactory.getInterfaceConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e09ca852L, "HotelBooking.structure.Chargeable"))) {
        if (SPropertyOperations.getBoolean(SNodeOperations.cast(Child, MetaAdapterFactory.getInterfaceConcept(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e09ca852L, "HotelBooking.structure.Chargeable")), MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x7fad6725e09ca852L, 0x26ee893bae652025L, "luxury"))) {
          luxuryCount++;
        }
      }
    }
    if (BedCount <= SPropertyOperations.getInteger(__thisNode__, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x3beb13a45ea5ff2L, "maxBeds")) && faccilityCount <= SPropertyOperations.getInteger(__thisNode__, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x3beb13a45ea5ff6L, "maxFacilities")) && SPropertyOperations.getInteger(__thisNode__, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x26ee893bae64f3a2L, "maxCapacity")) <= capacity && luxuryCount <= SPropertyOperations.getInteger(__thisNode__, MetaAdapterFactory.getProperty(0x7f67387345c45fbL, 0xbd3e45c50d906ea1L, 0x2d11723256bb3a6bL, 0x3beb13a45ea5ffbL, "maxLuxuryItems"))) {
      return true;
    }
    return false;
  }

  /*package*/ Room__BehaviorDescriptor() {
    super(REGISTRY);
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((Boolean) equals_id2Ohsz9mIOU$(node, (SNode) parameters[0]));
      case 1:
        setPrice_id7YHpMnwC_Wh(node, ((int) (Integer) parameters[0]));
        return null;
      case 2:
        return (T) ((String) getPrice_id7YHpMnwBdw8(node));
      case 3:
        return (T) ((String) getfacillityList_id795K_XqHNGP(node));
      case 4:
        return (T) ((String) getName_id7hAAzwIWVvi(node));
      case 5:
        return (T) ((String) getBedCount_id5KUuItmRlWM(node));
      case 6:
        return (T) ((String) getToiletCount_id5KUuItmRm2F(node));
      case 7:
        return (T) ((String) getRoomType_id5KUuItmRm6g(node));
      case 8:
        return (T) ((Boolean) constraints_id5HgWCcgkX31(node, (SNode) parameters[0]));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }
}
